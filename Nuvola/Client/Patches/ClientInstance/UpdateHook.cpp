#include "UpdateHook.h"

void __fastcall UpdateHook::clientInstanceCallback_1_20_12_1(class ClientInstance* theInstance, bool param_1) {
    Bridge::setClientInstance(theInstance);

    return PLH::FnCast(funcOriginal, &clientInstanceCallback_1_20_12_1)(theInstance, param_1);
}

UpdateHook::UpdateHook() : IPatch::IPatch("ClientInstance::Update") {
	//Ok I get it, this system is heap hell.
	//I just dont want objects getting destroyed
	this->addSignature(SigTable::ClientInstance_update); //1.19.22
	//this->addSignature(new SigInfo(new std::string(xorstr_("89 ?? ?? ?? ?? 89 ?? ?? ?? 57 48 83 ?? ?? 48 8B ?? 48 ?? ?? 48 ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? 48 ?? ?? 48 85 ?? 74 ?? 48 ?? ?? ?? 48 85 ?? 74 ?? ?? ?? ?? ?? 48 ?? ?? 48 ?? ?? ?? ?? 89 ?? ?? ?? ?? 89 ?? ?? ?? 48 ?? ?? 48")), -1)); //1.19.20
	//this->addSignature(new SigInfo(new std::string(xorstr_("89 ?? ?? ?? ?? 89 ?? ?? ?? ?? 89 ?? ?? ?? 55 41 ?? 41 ?? 41 ?? 41 ?? 48 ?? ?? ?? ?? ?? ?? ?? 48 81 ?? ?? ?? ?? ?? 48 8B ?? ?? ?? ?? ?? 48 33 ?? ?? 89 ?? ?? ?? ?? ?? 44 0F ?? ?? 48 8B ?? 45 33 ?? ?? 89 ?? ?? ?? ?? 81")), -1)); //1.17.30.4
	//this->addSignature(new SigInfo(new std::string(xorstr_("89 ?? ?? ?? ?? 89 ?? ?? ?? ?? 89 ?? ?? ?? 55 41 ?? 41 ?? 41 ?? 41 ?? 48 ?? ?? ?? ?? ?? ?? ?? 48 81 ?? ?? ?? ?? ?? 48 8B ?? ?? ?? ?? ?? 48 33 ?? ?? 89 ?? ?? ?? ?? ?? 44 0F ?? ?? 48 8B ?? 45")), -1)); //1.17.11.1
	//this->addSignature(new SigInfo(new std::string(xorstr_("48 8B ?? 55 41 ?? 41 ?? 41 ?? 41 ?? 48 ?? ?? ?? ?? ?? ?? 48 81 ?? ?? ?? ?? ?? ?? C7 ?? ?? ?? ?? ?? ?? ?? 89 ?? ?? ?? 89 ?? ?? ?? 89 ?? ?? 48 8B ?? ?? ?? ?? ?? 48 33 ?? ?? 89 ?? ?? ?? ?? ?? 44 0F ?? ?? 48 8B ?? 45")), 0)); //1.16.40.2
}

bool UpdateHook::apply() {
	return this->autoPatch(&clientInstanceCallback_1_20_12_1, &funcOriginal);
}